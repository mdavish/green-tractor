import { z } from "zod";

export const states = [
  { label: "Alabama", value: "AL" },
  { label: "Alaska", value: "AK" },
  { label: "Arizona", value: "AZ" },
  { label: "Arkansas", value: "AR" },
  { label: "California", value: "CA" },
  { label: "Colorado", value: "CO" },
  { label: "Connecticut", value: "CT" },
  { label: "Delaware", value: "DE" },
  { label: "Florida", value: "FL" },
  { label: "Georgia", value: "GA" },
  { label: "Hawaii", value: "HI" },
  { label: "Idaho", value: "ID" },
  { label: "Illinois", value: "IL" },
  { label: "Indiana", value: "IN" },
  { label: "Iowa", value: "IA" },
  { label: "Kansas", value: "KS" },
  { label: "Kentucky", value: "KY" },
  { label: "Louisiana", value: "LA" },
  { label: "Maine", value: "ME" },
  { label: "Maryland", value: "MD" },
  { label: "Massachusetts", value: "MA" },
  { label: "Michigan", value: "MI" },
  { label: "Minnesota", value: "MN" },
  { label: "Mississippi", value: "MS" },
  { label: "Missouri", value: "MO" },
  { label: "Montana", value: "MT" },
  { label: "Nebraska", value: "NE" },
  { label: "Nevada", value: "NV" },
  { label: "New Hampshire", value: "NH" },
  { label: "New Jersey", value: "NJ" },
  { label: "New Mexico", value: "NM" },
  { label: "New York", value: "NY" },
  { label: "North Carolina", value: "NC" },
  { label: "North Dakota", value: "ND" },
  { label: "Ohio", value: "OH" },
  { label: "Oklahoma", value: "OK" },
  { label: "Oregon", value: "OR" },
  { label: "Pennsylvania", value: "PA" },
  { label: "Rhode Island", value: "RI" },
  { label: "South Carolina", value: "SC" },
  { label: "South Dakota", value: "SD" },
  { label: "Tennessee", value: "TN" },
  { label: "Texas", value: "TX" },
  { label: "Utah", value: "UT" },
  { label: "Vermont", value: "VT" },
  { label: "Virginia", value: "VA" },
  { label: "Washington", value: "WA" },
  { label: "West Virginia", value: "WV" },
  { label: "Wisconsin", value: "WI" },
  { label: "Wyoming", value: "WY" },
];

export const StateSchema = z.union([
  z.literal("AL"),
  z.literal("AK"),
  z.literal("AZ"),
  z.literal("AR"),
  z.literal("CA"),
  z.literal("CO"),
  z.literal("CT"),
  z.literal("DE"),
  z.literal("FL"),
  z.literal("GA"),
  z.literal("HI"),
  z.literal("ID"),
  z.literal("IL"),
  z.literal("IN"),
  z.literal("IA"),
  z.literal("KS"),
  z.literal("KY"),
  z.literal("LA"),
  z.literal("ME"),
  z.literal("MD"),
  z.literal("MA"),
  z.literal("MI"),
  z.literal("MN"),
  z.literal("MS"),
  z.literal("MO"),
  z.literal("MT"),
  z.literal("NE"),
  z.literal("NV"),
  z.literal("NH"),
  z.literal("NJ"),
  z.literal("NM"),
  z.literal("NY"),
  z.literal("NC"),
  z.literal("ND"),
  z.literal("OH"),
  z.literal("OK"),
  z.literal("OR"),
  z.literal("PA"),
  z.literal("RI"),
  z.literal("SC"),
  z.literal("SD"),
  z.literal("TN"),
  z.literal("TX"),
  z.literal("UT"),
  z.literal("VT"),
  z.literal("VA"),
  z.literal("WA"),
  z.literal("WV"),
  z.literal("WI"),
  z.literal("WY"),
]);

export type State = z.infer<typeof StateSchema>;

export const convertDisplayToValue = (display: string): State => {
  const match = states.find((state) => state.label === display);
  if (match) {
    return StateSchema.parse(match.value);
  } else {
    throw new Error(`Could not find state with display value ${display}`);
  }
};
